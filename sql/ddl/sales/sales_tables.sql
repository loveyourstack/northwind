
CREATE TABLE sales.customer
(
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  address text NOT NULL,
  city text NOT NULL,
  code text NOT NULL UNIQUE,
  company_name text NOT NULL,
  contact_name text NOT NULL,
  contact_title text NOT NULL,
  country_fk bigint NOT NULL REFERENCES common.country (id),
  entry_at tracking_at,
  entry_by tracking_by,
  last_modified_at tracking_at,
  last_modified_by tracking_by,
  phone text NOT NULL,
  postal_code text NOT NULL,
  state text NOT NULL,
  CONSTRAINT s_c_code_len CHECK (char_length(code) = 5)
);
COMMENT ON TABLE sales.customer IS 'shortname: s_c';


CREATE TABLE sales.shipper
(
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  company_name text NOT NULL UNIQUE,
  entry_at tracking_at,
  entry_by tracking_by,
  last_modified_at tracking_at,
  last_modified_by tracking_by,
  phone text NOT NULL
);
COMMENT ON TABLE sales.shipper IS 'shortname: s_s';


CREATE TABLE sales.order
(
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  customer_fk bigint NOT NULL REFERENCES sales.customer(id),
  dest_address text NOT NULL,
  dest_city text NOT NULL,
  dest_company_name text NOT NULL,
  dest_country_fk bigint NOT NULL REFERENCES common.country(id),
  dest_postal_code text NOT NULL,
  dest_state text NOT NULL,
  entry_at tracking_at,
  entry_by tracking_by,
  freight_cost numeric(12,2) NOT NULL CHECK (freight_cost >= 0.0),
  last_modified_at tracking_at,
  last_modified_by tracking_by,
  is_shipped boolean NOT NULL DEFAULT false,
  order_date date NOT NULL CHECK (order_date >= '2010-01-01'),
  order_number int NOT NULL UNIQUE CHECK (order_number > 0),
  required_date date NOT NULL CHECK (required_date >= '2010-01-01'),
  salesman_fk bigint NOT NULL REFERENCES hr.employee(id),
  shipper_fk bigint NOT NULL REFERENCES sales.shipper(id),
  shipped_date date NOT NULL DEFAULT '0001-01-01'::date
);
COMMENT ON TABLE sales.order IS 'shortname: s_o';
--- change columns with ---
CREATE TABLE sales.order_archived 
( 
  LIKE sales.order,
  archived_at tracking_at,
  archived_by tracking_by,
  archived_by_cascade bool NOT NULL
);
COMMENT ON TABLE sales.order_archived IS 'shortname: s_o_arc';


CREATE TABLE sales.order_item
(
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  discount numeric(5,4) NOT NULL CHECK (discount BETWEEN 0.0 AND 1.0),
  entry_at tracking_at,
  entry_by tracking_by,
  last_modified_at tracking_at,
  last_modified_by tracking_by,
  order_fk bigint NOT NULL REFERENCES sales.order(id),
  product_fk bigint NOT NULL REFERENCES core.product(id),
  quantity int NOT NULL CHECK (quantity >= 0),
  unit_price numeric(12,2) NOT NULL CHECK (unit_price >= 0.0),
  UNIQUE(order_fk, product_fk)
);
COMMENT ON TABLE sales.order_item IS 'shortname: s_oi';
--- change columns with ---
CREATE TABLE sales.order_item_archived
( 
  LIKE sales.order_item,
  archived_at tracking_at,
  archived_by tracking_by,
  archived_by_cascade bool NOT NULL
);
COMMENT ON TABLE sales.order_item_archived IS 'shortname: s_oi_arc';

CREATE INDEX order_item_order_fk_idx ON sales.order_item USING btree(order_fk);
CLUSTER sales.order_item USING order_item_order_fk_idx;


CREATE TABLE sales.territory
(
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  code text NOT NULL UNIQUE,
  entry_at tracking_at,
  entry_by tracking_by,
  last_modified_at tracking_at,
  last_modified_by tracking_by,
  name text NOT NULL UNIQUE,
  region sales.region NOT NULL,
  salesman_fk bigint NOT NULL REFERENCES hr.employee(id),
  CONSTRAINT s_t_code_len CHECK (char_length(code) = 5)
);
COMMENT ON TABLE sales.territory IS 'shortname: s_t';
